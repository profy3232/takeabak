name: GoPix Platform Builds

on:
push:
branches: \[ main ]
\# Only run if commit comes from a PR with 'new release' in the title
\# The build and release happen only when changes are merged into main

jobs:
build-linux:
name: Build for Linux
runs-on: ubuntu-latest
strategy:
matrix:
arch: \[amd64, arm64, 386]
steps:
\- name: Checkout Code
uses: actions/checkout\@v4

```
  - name: Setup Go
    uses: actions/setup-go@v5
    with:
      go-version: '1.24.4'

  - name: Build Linux ${{ matrix.arch }}
    run: |
      mkdir -p dist/linux
      GOOS=linux GOARCH=${{ matrix.arch }} go build -o dist/linux/gopix-linux-${{ matrix.arch }} .

  - name: Upload Artifact
    uses: actions/upload-artifact@v4
    with:
      name: gopix-linux-${{ matrix.arch }}
      path: dist/linux/gopix-linux-${{ matrix.arch }}
```

build-windows:
name: Build for Windows
runs-on: ubuntu-latest
strategy:
matrix:
arch: \[amd64, arm64, 386]
steps:
\- name: Checkout Code
uses: actions/checkout\@v4

```
  - name: Setup Go
    uses: actions/setup-go@v5
    with:
      go-version: '1.24.4'

  - name: Build Windows ${{ matrix.arch }}
    run: |
      mkdir -p dist/windows
      GOOS=windows GOARCH=${{ matrix.arch }} go build -o dist/windows/gopix-windows-${{ matrix.arch }}.exe .

  - name: Upload Artifact
    uses: actions/upload-artifact@v4
    with:
      name: gopix-windows-${{ matrix.arch }}
      path: dist/windows/gopix-windows-${{ matrix.arch }}.exe
```

build-macos:
name: Build for macOS
runs-on: ubuntu-latest
strategy:
matrix:
arch: \[amd64, arm64]
steps:
\- name: Checkout Code
uses: actions/checkout\@v4

```
  - name: Setup Go
    uses: actions/setup-go@v5
    with:
      go-version: '1.24.4'

  - name: Build macOS ${{ matrix.arch }}
    run: |
      mkdir -p dist/macos
      GOOS=darwin GOARCH=${{ matrix.arch }} go build -o dist/macos/gopix-macos-${{ matrix.arch }} .

  - name: Upload Artifact
    uses: actions/upload-artifact@v4
    with:
      name: gopix-macos-${{ matrix.arch }}
      path: dist/macos/gopix-macos-${{ matrix.arch }}
```

release:
name: Publish to GitHub Releases
needs: \[build-linux, build-windows, build-macos]
runs-on: ubuntu-latest
if: startsWith(github.ref, 'refs/tags/v')
steps:
\- name: Download All Artifacts
uses: actions/download-artifact\@v4
with:
path: release-builds

```
  - name: Publish Release
    uses: softprops/action-gh-release@v2
    with:
      name: Release ${{ github.ref_name }}
      tag_name: ${{ github.ref_name }}
      files: release-builds/**
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```
